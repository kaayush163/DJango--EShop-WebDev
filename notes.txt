write extends instead extend in zinga template

python mange.py makemigrations
python manage.py migrate
Wheneev little changes even do make migrations and migrate

css 
if do like this 
<div class="container-fluid mt-3">  //mt-3 means margin from top
<div class="row mx-auto">  mx auto gives space between the two adjacent image in row
    <div class="card mx-auto mb-3"> it will show card according rowise
mb-3 gives bottom space 3 mm


Read from here
https://docs.djangoproject.com/en/5.0/



we ahve to create app so to amnage different differnt sections like in ecommerse we ahve to amnage stores payments dispaly etc

Go to sqlliteonline.com   https://sqliteonline.com/

powerful website tos ee the table on any database

for creatifnf django username and password write command python manage.py createsuperuser
Error comes because no databse is created db sqlite (it is empty) so first need to created table to create superuser


python manage.py makemigrations
No changes deteched because notheng operation has done on table

so first run this command 
python manage.py migrate

now see in sqliteonline.com and select the file dq.sqlite3 will see so many tables has been giving by django

Now run python manage.py createsuperuser
Username:- 
Email address:- 

now will see on added to the sqliteonline.com by selecting db.sqlite3 file again now its added
and go to localhost:8000/admin and now can regeiter in django adminstration easily 



Models creation

Difference between package and directory

models.py remove it from store folder and create package folder "models"

in that create product.py and write code(take helpin from django dicumentation)
and define different parameters related to product detail but on python mange.py makemigrations still no changes detected because we ahve to write __init__.py also from there it initializes

Importance of __init__.py


IMP ISSUES FACED BY MANY
now write from .product import Product now run makemigrations command now it will give some action
even if not updating makemigrations then check in Eshop settings INSTALLED_APPS=[] need to add app here like 'store' add here also then that will work
If still not updating then write this python manage.py makemigrations store




Not: when using image field for uploading image we have to use third party pillow


then run python mange.py migrate







Admin not showing product row in url localhost:8000/admin  evn created Models structure weel 
so for this we ahve to go for store app and in admin.py we ahve to add soem commeands

from django.contrib import admin
from .models.product import Product
# Register your models here.
admin.site.register(Product)

no go back to admin url and there it willbe rpesent and can be ab=vailable to add items now


For category again mdoels create file category.py then again run 
python manage.py makemigrations
python mange.py migrate
these two commands always run on every chanegs amde







Foreign Key
 https://sentry.io/answers/django-on-delete/

If not working giving some issue best to delete all migrations files except __Init__.py and delete dq.sqlite3 then run python mangae.oy makemigrations python manag.py migrate






Handling Requests

Lecture 10
Serving html page

Eshop -> urls.py
same create in store app urls.py file that url fucntion will be call on view.py of store app
so add print in view.py but it will still not render on '/' this url of localhost

so for doing this lets go back to the Eshop->urls.py and add include package import (from .... import) and in urlpatters add the path('',include('store.urls'))   //appname.fileyou want to render

jab bhi koi request iss '' path par aaega to yeh pstore app ke urls ko check kargea so then in stroe urls.py which says to run index fucntion now

Now request recived printed at terminal but show error at webpage because it not sending any response so for that we do import HTTPRESPONSE in View.py in store app 

from django.http import HttpResponse  add in view.py


create templates folder in store app make one html file and do any heading provide there

Now go to view.py of store app and render     return render(request,'index.html')  this will automatically render through the templates folder to index.html we didnt need to paass the \templates like this this is magic of django it understand the html page render by default at templates folder


#Best to read anfd focus more o DJANGO DOCUMENTATION`






Lecture 12 Adding bootstrap

to get all products from admin/products
we will go to product.py of astore app
 and do @staticmethod
     def get_all_products():
        return Product.objects.all()

and then in view.py of stroe app 
from .models.product import Product
def index(request):
    prds = Product.get_all_products() 
    print(products)
return render(request, 'index.html',{'products':prds}


No go to index.html and have to use jinga template passing the key products







Lecture 14 adidng navbar and image fixing
since adding products.image.url still wont work so for that we have to add static MEDIA URL (can read from django documentation) in ESHOP->urls.py

from django.contrib import admin
from django.urls import path,include
from django.conf.urls.static import static
from . import settings

urlpatterns = [
    path('admin/', admin.site.urls),
    path('',include('store.urls'))
]+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)


now in settings.py we have to add static media url too after adding in urls.py
add after STATIC_URL line alreayd was present
MEDIA_URL = '/abcd/' anything you can give(/image/donwload/ isse end users ko pta hi nahi chalega where is images located 
MEDIA_ROOT = BASE_DIR

always write extends not extend in zinda template




Lecture -17 Get product by id
Very important do in index.html  <a href="/?category={{category.id}}"
            class="list-group-item list-group-item-action">{{category.name}}</a>     
a href use /?category={{category.id}}


in view.py add these
categoryID = request.GET['category'] - X   this will throw error multiDIct Value
MultiVal key DICT error comes at view.py categoryID = request.GET['category']

categoryID = request.GET.get('category') - OK
    if categoryID:
        prds = Product.get_all_products_by_categoryid(categoryID)
    else:
        prds = Product.get_all_products()


for showing all products we will do in index.html
<a href="/" class="list-group-item list-group-item-action">All Products</a>
we have done href="/" because for showing all products we have to be on same home apge




Lecture 18 serving signup page
for doing that we use view.py and urls.py and created signup.html in templeates these are basic things need to to know at every step


Lecture 19customer class creating
similar in models we create cutoemrs.py adn make class in it and in init.py we import cutomer

and do python mange.py makemigrations
python manage.py migrate


CSRF handled inside form of index.html for form submission donning successfully



 TO SAVE FORM DATA
(a) in models-> customer.py we define register fucntion(self): sel.save()
(b) we can create object in view.py




Lecture 22 Validation of form datas (email,phone,name) done on server side (store app view.py)
TO show error message we go to signup.html
{% if error%}
                <div class="alert alert-danger" role="alert">
                    {{error}}
                </div>
                {% endif %}

since when erro comes in any form data field it reloads the whole signup.html
and again have to fill all data
so for stopping this issue we want to empty only that string whose valuen  is coming incorrect
value="{{values.last_name}}" add this in signup.html <input value=""> like this this will not allow to make empty other strings when any specific data value string put incorrect
 

value = {
           'first_name' : first_name,
           'last_name' : last_name,
           'phone' :phone,
           'email' : email
       }


data = {
               'error': error_message,
               'values': value
           } 


Now again problems comes when on submitting form with fillong values on rendering the page to the index.html
the categories are not showing so we ahev to redirect('http:localhost:8000') not a goodd method 
so we paass name in urls.py and redirect(homepage) 
path('',index,name='homepage') add name='homepage' in urls.py






Lecture 26 Email Validation

For email validation to check if no email is already present


customer.py of models do this 
def isExists(self):
        if Customer.objects.filter(email = self.email):   #care its objects not object
            return True

        return False


then in view.py of store app before 

 elif customer.isExists():
           error_message = 'Email already registered' before       if not error_message






Lecture 27 password hashing by make_password and then check hased password and input password with help of check_password
from django.contrib.auth.hashers import make_password , check_password


if not error_message:  add this before register
            customer.password = make_password(customer.password)






Whenever post request we have need of CSRF_token





Now for login set url on urls.py